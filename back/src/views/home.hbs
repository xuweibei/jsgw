<!DOCTYPE html>
<html lang="zh">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="微信小程序后台管理系统">
    <meta name="keyword" content="微信, 小程序, node, 后台管理系统">
    <title>H5start后台管理系统</title>
    <link rel="stylesheet" href="../assets/css/home.css">
    <link rel="stylesheet" href="../assets//styles/bootstrap.min.css">
    <script src="../utils/jquery-3.4.1.min.js"></script>
    <script src="../utils//wangEditor.min.js"></script>
    <script src="../utils/bootstrap.min.js"></script>
</head>

<body>
    <div class="container-fluid home bg-info">
        {{#> menuLeft }}{{/menuLeft }}

        {{#> rightMenu }}{{/rightMenu }}
    </div>
    <script type="text/javascript">
        const E = window.wangEditor
        const editor = new E('#editor')
        editor.customConfig.linkImgCallback = function (url) {
            console.log(url) // url 即插入图片的地址
        }
         //editor.customConfig.uploadImgShowBase64 = true // base64
         editor.customConfig.debug = true
        // editor.customConfig.showLinkImg = false;
        editor.customConfig.uploadImgServer = 'http://localhost:8000/upload'; // 上传图片到服务器
        //editor.customConfig.customUploadImg = function (files, insert) {
        //   console.log('流口水大健康和')
        //};
        /*editor.customConfig.uploadImgHooks = {
            before: function (xhr, editor, files) {
                // 图片上传之前触发
                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，files 是选择的图片文件
                console.log(files)
                // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传
                // return {
                //     prevent: true,
                //     msg: '放弃上传'
                // }
            },
            success: function (xhr, editor, result) {
                // 图片上传并返回结果，图片插入成功之后触发
                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果
            },
            fail: function (xhr, editor, result) {
                // 图片上传并返回结果，但图片插入错误时触发
                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果
            },
            error: function (xhr, editor) {
                console.log('error')
                // 图片上传出错时触发
                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象
            },
            timeout: function (xhr, editor) {
                // 图片上传超时时触发
                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象
            },

            // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置
            // （但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错）
            customInsert: function (insertImg, result, editor) {
                // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）
                // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果

                // 举例：假如上传图片成功后，服务器端返回的是 {url:'....'} 这种格式，即可这样插入图片：
                var url = result.url
                insertImg(url)

                // result 必须是一个 JSON 格式字符串！！！否则报错
            }
        }*/

        editor.customConfig.menus = [
            'head',
            'bold',
            'italic',
            'underline',
            'image',
            'code'
        ]
        editor.create()
    </script>
</body>

</html>