{{#>default}}
<div class="department-structur-container">
  <div aria-live="polite" aria-atomic="true" class="d-flex justify-content-center align-items-center"
    style="min-height: 200px;">
    <!-- Then put toasts within -->
    <div class="toast position-fixed" role="alert" aria-live="assertive" aria-atomic="true"
      style="left: 50%; z-index: 1000; transform: translateX(-50%);">
      <div class="toast-header">
        <strong class="mr-auto">提示</strong>
      </div>
      <div class="toast-body"></div>
    </div>
  </div>
  <div aria-live="polite" aria-atomic="true" class="d-flex justify-content-center align-items-center"
    style="min-height: 200px;">
  </div>
  <div class="department-structur-left">
    <div class="left-title">部门结构</div>
    <div class="left-content">
      {{#if depObj.allDep.length}}
      {{#each depObj.allDep}}
      <div class="item d-flex flex-start">
        <span>全部</span><span>{{this.num}}人</span>
      </div>
      {{/each}}
      {{/if}}
      {{#if depObj.dep.length}}
      {{#each depObj.dep}}
      <div class="item d-flex flex-start">
        <span>{{this.department}}</span><span>{{this.num}}</span>
        <div class="svg-img pr-2">
          <img src="../assets/img/edit.svg" alt="" onclick="editDep({{this.id}})">
          <img src="../assets/img/delete.svg" alt="" onclick="deleteDep({{this.id}})">
        </div>
      </div>
      {{/each}}
      {{/if}}
    </div>
    <div class="left-footer" data-toggle="modal" data-target="#dep-modal">
      <img src="../assets/img/add.png" alt=""><span>添加分组</span>
    </div>
    {{!-- <div role="alert" aria-live="assertive" aria-atomic="true" class="toast" data-autohide="false">
      <div class="toast-body"></div>
    </div> --}}
  </div>
  <div class="modal fade" id="dep-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header border-bottom-0 justify-content-center ">
          <h5 class="modal-title  font-weight-bolder" id="exampleModalCenterTitle">新增</h5>
        </div>
        <form class="w-75 job-form" method="post">
          <div class="form-group row">
            <label for="colFormLabel" class="col-sm-3 col-form-label job-form-label">名称:</label>
            <div class="col-sm-9">
              <input type="text" class="form-control job-form-input job-form-name" maxlength="10" id="colFormLabel"
                placeholder="请输入" name="name">
            </div>
          </div>
          {{!-- <div class="form-group row">
            <label for="colFormLabel" class="col-sm-3 col-form-label job-form-label">排序:</label>
            <div class="col-sm-9">
              <input type="email" class="form-control job-form-input" maxlength="10" id="colFormLabel"
                placeholder="请输入">
            </div>
          </div> --}}
          <div class="modal-footer border-top-0 job-modal-footer justify-content-center">
            <button type="button" class="btn btn-secondary btn-left" data-dismiss="modal">返回</button>
            <button type="submit" class="btn btn-primary btn-right dep-btn" name="submit">保存</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  <div class="department-structur-right">
    <div class="table-container">
      <div class="toolbar">
        <form class="form-inline">
          <div class="form-group mx-sm-3 mb-2">
            <input type="text" class="form-control" id="inputPassword2" placeholder="请输入用户名或手机号">
          </div>
          <button type="submit" class="btn btn-primary mb-2"
            style="width: 64px; height: 32px; font-size: 14px; background: #fff; color:#0AAFDE;">搜索</button>
        </form>
      </div>
      <button class="btn btn-primary float-right mt-2" data-toggle="modal" id="filterBy"
        data-target="#exampleModalCenter" style="width: 128px; height: 32px; font-size: 14px; background: #0AAFDE;"
        onclick="openStfModal()">新增</button>
      <table id="table" class="text-center table table-striped table-borderless">
      </table>

      <div class="modal fade emp-modal" id="exampleModalCenter" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
            <div class="modal-header justify-content-center">
              <h5 class="modal-title font-weight-bolder" id="stf-title">新增</h5>
            </div>
            <div class="modal-body">
              <form class="d-flex justify-content-center department-structur-container stf-form">
                <div>
                  <div class="form-group row">
                    <label for="inputPassword" class="col-sm-4 col-form-label">员工姓名:</label>
                    <div class="col-sm-8">
                      <input type="text" class="form-control dep-input stf-name" maxlength="5" id="inputPassword"
                        placeholder="请输入" name="name">
                    </div>
                  </div>
                  <div class="form-group row">
                    <label for="inputPassword" class="col-sm-4 col-form-label">手机号:</label>
                    <div class="col-sm-8">
                      <input type="text" class="form-control stf-phone" id="inputPassword" placeholder="请输入"
                        maxlength="11" name="phone">
                    </div>
                  </div>
                  <div class="form-group row">
                    <label for="inputPassword" class="col-sm-4 col-form-label">登录账户:</label>
                    <div class="col-sm-8">
                      <input type="text" maxlength="12" class="form-control stf-account" id="inputPassword"
                        name="account" placeholder="请输入登录账户">
                    </div>
                  </div>
                  <div class="form-group row">
                    <label for="inputPassword" class="col-sm-4 col-form-label">登录密码:</label>
                    <div class="col-sm-8">
                      <input type="password" class="form-control stf-password" id="inputPassword" name="password"
                        placeholder="请输入登录密码" maxlength="12">
                    </div>
                  </div>
                  <div class="form-group row">
                    <label for="inputPassword" class="col-sm-4 col-form-label">所属部门:</label>
                    <div class="col-sm-8">
                      <select class="form-control stf-select" name="department">
                        {{#if dep.length}}
                        {{#each dep}}
                        <option>{{this.department}}</option>
                        {{/each}}
                        {{/if}}
                      </select>
                    </div>
                  </div>
                  <div class="form-group row ">
                    <label for="inputPassword" class="col-sm-4 col-form-label">授权管理:</label>
                    <div class="col-sm-8">
                      <select class="form-control stf-card" name="author">
                        {{#if identity.length}}
                        {{#each identity}}
                        <option>{{this.identity}}</option>
                        {{/each}}
                        {{/if}}
                      </select>
                    </div>
                  </div>
                  <div class="modal-footer border-top-0 dep-footer justify-content-center">
                    <button type="button" class="btn btn-left" data-dismiss="modal">返回</button>
                    <button type="submit" class="btn btn-right" onclick="addEmp()">保存</button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <script>
        // 定义全局变量保存编辑员工id
        let empId;
        // 关闭提示框
        function toast(message) {
          $('.toast').toast("show")
          $('.toast-body').text(message);
          $('.toast').on('hidden.bs.toast', function () {
            location.reload()
          })
        }
        // 删除分组
        function deleteDep(id) {
          $.post(url.delDep, { id }, function (res) {
            if (res) {
              toast(res.message)
            }
          })
        }
        // 编辑分组
        function editDep(id) {
          $('#dep-modal').modal('toggle')
          $('#exampleModalCenterTitle').text('编辑')
          $('.dep-btn').on('click', function (e) {
            e.preventDefault()
            var form = $('.job-form')
            var bootstrapValidator = form.data('bootstrapValidator');
            bootstrapValidator.validate();
            if (bootstrapValidator.isValid()) {
              var jobName = $('.job-form-name').val()
              $.post(url.editDep, { name: jobName, id }, function (res) {
                if (res) {
                  toast(res.message)
                }
              })
            }
          })
        }

        // 開啓员工弹窗
        function openStfModal() {
          $('#stf-title').text('新增');
          $('.stf-name').val('');
          $('.stf-phone').val('');
          $('.stf-select').val();
          $('.stf-card').val();
        }

        // 模态框关闭事件 清空检验规则
        $('.emp-modal').on('hidden.bs.modal', function () {
          // 刷新页面 重置表单校验
          location.reload()
        })

        // 添加员工
        function addEmp() {
          var form = $('.stf-form');
          var bootstrapValidator = form.data('bootstrapValidator');
          bootstrapValidator.validate();
          if (bootstrapValidator.isValid()) {
            const data = {
              name: $('.stf-name').val(),
              phone: $('.stf-phone').val(),
              department: $('.stf-select').val(),
              author: $('.stf-card').val(),
              account: $('.stf-account').val(),
              password: $('.stf-password').val()
            }
            if (empId) {
              data.id = empId;
              $.post(url.editEmp, data, function (res) {
                toast(res.message)
              })
            }
            $.post(url.insertStf, data, function (res) {
              toast(res.message)
            })
          }
        }
        var $table = $('#table')
        $(function () {
          $('.stf-form').bootstrapValidator({
            fields: {
              phone: {
                message: '手机号验证失败',
                validators: {
                  notEmpty: {
                    message: '手机号不能为空'
                  },
                  regexp: {
                    regexp: /^[1](([3][0-9])|([4][5-9])|([5][0-3,5-9])|([6][5,6])|([7][0-8])|([8][0-9])|([9][1,8,9]))[0-9]{8}$/,
                    message: '请输入正确的手机号'
                  }
                }
              },
              name: {
                validators: {
                  notEmpty: {
                    message: '用户姓名不能为空'
                  },
                  stringLength: {
                    min: 2,
                    max: 5,
                    message: '用户姓名长度必须在2到5位之间'
                  },
                  regexp: {
                    regexp: /^(?:[\u4e00-\u9fa5·]{2,16})$/,
                    message: "请输入中文姓名"
                  }
                }
              },
              account: {
                validators: {
                  notEmpty: {
                    message: '登录用户名不能为空'
                  },
                  stringLength: {
                    min: 6,
                    max: 12,
                    message: '用户姓名长度必须在6到12位之间'
                  },
                  regexp: {
                    regexp: /^[A-Za-z0-9]+$/,
                    message: '登录用户名由数字和字母组成'
                  }
                }
              },
              password: {
                stringLength: {
                  min: 6,
                  max: 12,
                  message: '密码长度必须在6到12位之间'
                },
              },
              department: {
                validators: {
                  notEmpty: {
                    message: '所属部门不能为空'
                  }
                }
              },
              author: {
                validators: {
                  notEmpty: {
                    message: '权限不能为空'
                  }
                }
              }
            }
          })
          // 分组表单
          $('.job-form').bootstrapValidator({
            fields: {
              name: {
                validators: {
                  notEmpty: {
                    message: '用户姓名不能为空'
                  },
                  stringLength: {
                    min: 2,
                    max: 10,
                    message: '用户姓名长度必须在2到10位之间'
                  },
                }
              }
            }
          })
            .on('success.form.bv', function (e) {
              // Prevent form submission
              e.preventDefault();
              // Get the form instance
              var $form = $(e.target);
              // Get the BootstrapValidator instance
              const bv = $form.data('bootstrapValidator');
              if ($('#exampleModalCenterTitle').text() === '编辑') {
                return;
              }
              $.post(url.addDep, $form.serialize(), function (res) {
                if (res) {
                  $('#dep-modal').modal('toggle')
                  toast(res.message)
                }
              });
            });
          $table.bootstrapTable({
            toolbar: '.toolbar',
            method: "post",
            url: url.getTable,
            pageNumber: 1,
            pagination: true,
            sortable: true,
            sortOrder: "asc",
            queryParams: { a: 1 },
            pageSize: 5,
            paginationPreText: "上一页",
            paginationNextText: "下一页",
            pageList: [5, 10, 15, 20, 25], //记录数可选列表 
            formatLoadingMessage: function () {
              return "请稍等，正在加载中...";
            },
            responseHandler: function (res) {
              const arr = []
              if (res && res.status === 0) {
                res.data.forEach(item => {
                  arr.push({
                    id: item.id,
                    active: item.active,
                    department: item.department,
                    name: item.name,
                    tel: item.phone,
                    card: item.identity,
                    status: Number(item.active) ? "使用中" : "关闭中",
                  })
                })
              }
              return arr
            },
            columns: [{
              title: '部门',
              field: 'department',
            }, {
              title: '姓名',
              field: 'name'
            }, {
              title: '手机号',
              field: 'tel'
            }, {
              title: '身份',
              field: 'card'
            }, {
              title: '状态',
              field: 'status'
            }, {
              title: '操作',
              field: 'opt',
              class: 'last-column',
              formatter: operateFormatter,
              events: operateEvent = {
                "click #table-edit": function (e, value, row, index) {
                  e.preventDefault();
                  $('#exampleModalCenter').modal('show')
                  $('#stf-title').text('编辑');
                  $('.stf-name').val(row.name);
                  $('.stf-phone').val(row.tel);
                  $('.stf-select').val(row.department);
                  $('.stf-card').val(row.card);
                  empId = row.id
                },
                "click #table-del": function (e, value, row, index) {
                  $.post(url.delEmp, { id: row.id }, function (res) {
                    if (res && res.status === 0) {
                      toast(res.message)
                    }
                  })
                },
                "click #table-active": function (e, value, row, index) {
                  $.post(url.changeStatus, { id: row.id }, function (res) {
                    if (res && res.status === 0) {
                      toast(res.message)
                    }
                  })
                }
              }
            }],
          })
          //操作列表
          function operateFormatter(value, row, index) {
            let start = row.active === "1" ? "禁用" : "启用"
            return [
              '<a class="like opt" id="table-active" href="javascript:void(0)" title="Remove">' + start + '</a>',
              '<a class="like opt" id="table-edit" href="javascript:void(0)" title="Like">编辑</a>',
              '<a class="remove opt" id="table-del" href="javascript:void(0)" title="Remove">删除</a>'
            ].join('')
          }
        })
      </script>
    </div>
  </div>
</div>
{{/default}}